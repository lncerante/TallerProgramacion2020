<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxPoster.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhKAAoAPcAAAD/AGZ5j2p8kmp9kmt9k2t+k2x+k21/lG6AlW+BlnCBlnCClnKEmHOEmHOFmXSF
        mXSGmnWGmneIm3eInHiJnHmJnXmKnXqLnnuLnnyMn32NoH6OoX+PoYCQooKSpIOSpIaVp4eWp4iWqIiX
        qImXqImYqYqZqZGerpGfr5Kfr5KgsJOgsJShsJShsZWisZajspeks5uotp2pt56quJ+ruaCruaCsuqGt
        uqKuu7K8x7O8x7O9yLS9yLW+yba/yba/yrfAyrjBy7nCzLrDzLvDzbzEzr/H0MDI0cHI0cHJ0sLJ0sLK
        08PK08TM1MbN1cjP18nQ18rQ2MrR2MvS2c7U29DW3dHX3tLY3tTZ39Ta4NXa4Nbb4dfc4tjd4tnd49ne
        49re5Nrf5Nvf5dzg5dzh5t3h5t3i5t7i59/j59/j6ODk6ODk6eHl6eLl6eLm6uPm6uPn6+Tn6+bp7ens
        7+rt8Ovt8Ozu8ezv8e3v8u7w8u7w8+/x8+/x9PDy9PHy9PP09vT19/T29/X2+PX3+Pb3+Pf4+fr6+/r7
        +/v7/Pv8/Pz8/f39/f39/v7+/v7+////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /yH/C05FVFNDQVBFMi4wAwEAAAAh+QQFBAAAACwAAAAAKAAoAIcA/wBmeY9qfJJqfZJrfZNrfpNsfpNt
        f5RugJVvgZZwgZZwgpZyhJhzhJhzhZl0hZl0hpp1hpp3iJt3iJx4iZx5iZ15ip16i557i558jJ99jaB+
        jqF/j6GAkKKCkqSDkqSGlaeHlqeIlqiIl6iJl6iJmKmKmamRnq6Rn6+Sn6+SoLCToLCUobCUobGVorGW
        o7KXpLObqLadqbeeqrifq7mgq7mgrLqhrbqirruyvMezvMezvci0vci1vsm2v8m2v8q3wMq4wcu5wsy6
        w8y7w828xM6/x9DAyNHByNHBydLCydLCytPDytPEzNTGzdXIz9fJ0NfK0NjK0djL0tnO1NvQ1t3R197S
        2N7U2d/U2uDV2uDW2+HX3OLY3eLZ3ePZ3uPa3uTa3+Tb3+Xc4OXc4ebd4ebd4ube4uff4+ff4+jg5Ojg
        5Onh5eni5eni5urj5urj5+vk5+vm6e3p7O/q7fDr7fDs7vHs7/Ht7/Lu8PLu8PPv8fPv8fTw8vTx8vTz
        9Pb09ff09vf19vj19/j29/j3+Pn6+vv6+/v7+/z7/Pz8/P39/f39/f7+/v7+/v//////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////8I/wARPVL0SCBBgwUHJjyoEKHDhgofLXrUSCJFixUVpeHB
        wgKCAAEIaFjRY8zFiRVRYmTIsmChHBoU0DBiZk6hP362NIkxIcIPPwuDCjxJ1FAPAiquMFLJdCCWEwh4
        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
</value>
  </data>
  <data name="buttonClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAK5JREFUOE/NkkEOgzAMBNNr+VeF4GFwok92x7EtiFAI6YmRLOL12iSE9FxE5E18
        PG2CdyQGT3cQJ0L5ulRFPWaVyaUSCovVs/HlcgH6mh2tF2KoDiO/NyTAeBrGs29IoA3Wl5+x3rzcB42x
        M6VvJ0dojuMo/w3SRuuXzUPpOxoNpw/LuvlrFGCq3g7avWEUm1dM7XoY4pzLF0MC9ZhVZpd2EAdi9LSJ
        erXH08eR0g+bayVm6Dq59AAAAABJRU5ErkJggg==
</value>
  </data>
</root>